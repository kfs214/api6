require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/animals", type: :request do
  # This should return the minimal set of attributes required to create a valid
  # Animal. As you add validations to Animal, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) {{
    birthdays: [
      'Mon Feb 11 1889',
      '1970-01-01',
      '2020/2/2'
    ]
  }}

  let(:invalid_attributes) {{
    birthday: 'Mon Feb 11 1889'
  }}

  # This should return the minimal set of values that should be in the headers
  # in order to pass any filters (e.g. authentication) defined in
  # AnimalsController, or in your router and rack
  # middleware. Be sure to keep this updated too.
  let(:valid_headers) {
    {}
  }

  describe "POST /animals" do
    context 'when the request is valid' do
      before { post '/animals', params: valid_attributes }

      it 'returns status code 200' do
        expect(response).to have_http_status(:ok)
      end
    end

    context 'when the request is invalid' do
      before { post '/animals', params: invalid_attributes}

      it 'returns status code 422' do
        expect(response).tp have_http_status(:unprocessable_entity)
      end
    end
  end
end
